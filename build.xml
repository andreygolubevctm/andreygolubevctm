<?xml version="1.0" encoding="UTF-8"?>
<!-- ========================================== -->
<!-- ========  AIH Compare The Market  ======== -->
<!-- CTM Web Application Deployment Ant Build
<!   $Id$
<! ©2013 Australian Insurance Holdings Pty Ltd  -->

<project name="web_ctm" default="usage">

	<!-- :NOTE: Requires Ant 1.8 or greater, with jsch.jar library 0.1.42 or greater (for scp support) -->

	<!-- ******** :NOTE: STILL IN DEVELOPMENT—DO NOT RUN UNLESS YOU ARE REALLY REALLY RIDICULOUSLY SURE ******** -->

	<!-- Properties for this application -->
	<!-- :TODO: replace where necessary, likely based on OS the ant build script is being run from (e.g. build.properties.unix etc) -->
	<description>web_ctm: Compare The Market Online Aggregator</description>
	<property name="war.context" value="ctm" />
	<property name="tmp.dir" value="/var/tmp" />
	<property name="tomcatlib.dir" value="/usr/tomcat/current/lib" />

	<!-- Properties for this deployment -->
	<!-- :TODO: replace where necessary, likely with environment properties files (e.g. build.properties.PRO etc) -->
	<property name="scp.userid" value="xplooy" />
	<property name="scp.host" value="localhost" />
	<property name="scp.deploydir" value="/usr/tomcat/current/webapps/" />
	<property name="scp.keyfile" value="id_antbuild_rsa" />

	<!-- Tomcat Manager for this deployment -->
	<!-- :TODO: replace where necessary, likely with environment properties files (e.g. build.properties.PRO etc) -->
	<!-- :TODO: if we get our server environments set up right, these are redundant -->
	<property name="tomcat.manager.url" value="http://localhost:8080/manager" />
	<!-- property name="tomcat.manager.url" value="http://tws01_ass1:8080/manager" / -->
	<property name="tomcat.manager.username" value="adminuserisadminy" />
	<property name="tomcat.manager.password" value="helloworldthesearenotrealcredentials" />

	<!-- Common and/or derived properties -->
	<property name="war.filename" value="${war.context}.war" />
	<property name="src.dir" value="src" />
	<property name="web.dir" value="WebContent" />
	<property name="webinf.dir" value="${web.dir}/WEB-INF" />
	<property name="classes.dir" value="${webinf.dir}/classes"/>
	<property name="JVM.version" value="1.6" />
	<path id="master-classpath">
		<fileset dir="${webinf.dir}/lib" includes="*.jar" />
		<fileset dir="${tomcatlib.dir}" includes="*.jar" />
		<pathelement path="${classes.dir}" />
	</path>

	<target name="usage"  description="Display a build process usage message">
		<echo message="" />
		<echo message="Ant Builder for Project: ${war.context}" />
		<echo message="--------------------------------------------" />
		<echo message="" />
		<echo message="Deploy to various target environments." />
		<echo message="Available targets:" />
		<echo message="  usage           Display this help message" />
		<echo message="  build           Compile all Java classes" />
		<echo message="  clean           Delete compiled Java classes" />
		<echo message="  deploy.INT      Deploy new WAR to INT environment (used during Ant build script development)" />
		<echo message="  deploy.QA       Deploy new WAR to QA environment" />
		<echo message="  deploy.PRELIVE  Deploy new WAR to PRELIVE environment" />
		<echo message="  deploy.PRO      Deploy new WAR to PRO environment" />
		<echo message="" />
		<echo message="The RELEASE version for deploy targets can optionally be passed on the commandline, e.g." />
		<echo message="  ant -DRELEASE=2013.11 deploy.PRO" />
		<echo message="" />
	</target>

	<target name="build" description="Compile all source Java files">
		<condition property="build.abort">
			<or>
				<not><isset property="classes.dir" /></not>
				<not><isset property="src.dir" /></not>
				<not><isset property="JVM.version" /></not>
			</or>
		</condition>
		<fail if="build.abort">Build is missing one or more required properties, and the build cannot continue.</fail>

		<echo message="Compiling all source Java files" />
		<mkdir dir="${classes.dir}" />
		<javac
			classpathref="master-classpath"
			srcdir="${src.dir}"
			destdir="${classes.dir}"
			source="${JVM.version}"
			target="${JVM.version}"
			debug="true"
			deprecation="false"
			optimize="false"
			includeantruntime="false"
			failonerror="true"
			nowarn="true"
		/>
	</target>

	<target name="clean" description="Delete Java classes and empty build directories">
		<echo message="Deleting Java classes and empty build directories" />
		<delete>
			<fileset dir="${classes.dir}">
				<include name="**/*.class" />
			</fileset>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${classes.dir}">
				<and>
					<size value="0" />
					<type type="dir" />
				</and>
			</fileset>
		</delete>
	</target>

	<!-- :TODO: deploy.INT can probably be removed once the Ant build script development is complete -->
	<target name="deploy.INT" description="Deploy new WAR to INT environment (used during Ant build script development)">
		<property name="target.prefix" value="INT" />

		<antcall target="init" />

		<antcall target="_removeConfigs">
			<param name="destroy.prefix" value="QA" />
		</antcall>
		<antcall target="_removeConfigs">
			<param name="destroy.prefix" value="PRO" />
		</antcall>

		<antcall target="_deploy" />
		<antcall target="_upload" />
	</target>

	<target name="deploy.QA" description="Deploy new WAR to QA environment">
		<property name="target.prefix" value="QA" />

		<antcall target="init" />

		<antcall target="_enableConfigs">
			<param name="config.prefix" value="${target.prefix}" />
		</antcall>
		<antcall target="_removeConfigs">
			<param name="destroy.prefix" value="PRO" />
		</antcall>

		<antcall target="_deploy" />
		<antcall target="_upload" />
	</target>

	<target name="deploy.PRELIVE" description="Deploy new WAR to PRELIVE environment">
		<property name="target.prefix" value="PRELIVE" />

		<antcall target="_confirm.go" />

		<antcall target="_enableConfigs">
			<!-- :NOTE: Custom prefix: PRELIVE uses PRO configs -->
			<param name="config.prefix" value="PRO" />
		</antcall>
		<antcall target="_removeConfigs">
			<param name="destroy.prefix" value="QA" />
		</antcall>

		<antcall target="_deploy" />
		<antcall target="_upload" />
	</target>

	<target name="deploy.PRO" description="Deploy new WAR to PRO environment">
		<property name="target.prefix" value="PRO" />

		<antcall target="_confirm.go" />

		<antcall target="_enableConfigs">
			<param name="config.prefix" value="${target.prefix}" />
		</antcall>
		<antcall target="_removeConfigs">
			<param name="destroy.prefix" value="QA" />
		</antcall>

		<antcall target="_deploy" />
		<antcall target="_upload" />
	</target>

	<target name="init" description="Prepare for takeoff">
		<!-- :TODO: check for all paths writable, required properties, required Java class libraries (e.g. jsch for scp support), scp keyfile… -->
<!--
		<condition property="go.release">
			<not>
				<isset property="RELEASE" />
			</not>
		</condition>

		<input message="Enter a release version code (e.g. “2013.11” for weekly release or “2013.11a” for patch release): " addproperty="RELEASE" />
-->
	</target>

	<target name="_confirm.go" description="Prompt the user to perform the build and release process">
		<condition property="go.abort">
			<or>
				<not><isset property="target.prefix" /></not>
				<not><isset property="war.context" /></not>
				<not><isset property="RELEASE" /></not>
			</or>
		</condition>
		<fail if="go.abort">Build configmration prompt is missing one or more required properties, and the build cannot continue.</fail>

		<input message="Really deploy ${war.context} release ${RELEASE} to ${target.prefix} environment (enter “yes” to continue)? " addproperty="go.input" />
		<condition property="go.abort">
			<not>
				<equals arg1="yes" arg2="${go.input}" casesensitive="false" trim="true" forcestring="true" />
			</not>
		</condition>
		<fail if="go.abort">Aborting as requested.</fail>
	</target>

	<target name="_enableConfigs" depends="build" description="Rename any environment-specific override files (settings etc) to enable them for the given environment prefix">
		<condition property="enableConfigs.abort">
			<or>
				<not><isset property="config.prefix" /></not>
				<not><isset property="web.dir" /></not>
			</or>
		</condition>
		<fail if="enableConfigs.abort">enableConfigs is missing one or more required properties, and the build cannot continue.</fail>

		<echo message="Renaming any environment-specific override files (settings etc) to enable them for the ${config.prefix} environment prefix" />
		<move todir="${web.dir}" overwrite="true" force="true" verbose="true">
			<fileset dir="${web.dir}" />
			<regexpmapper from="(.+)_${config.prefix}(\..+)?" to="\1\2" />
		</move>
	</target>

	<target name="_removeConfigs" description="Remove config files meant for the given environment prefix">
		<condition property="removeConfigs.abort">
			<or>
				<not><isset property="destroy.prefix" /></not>
				<not><isset property="web.dir" /></not>
				<not><isset property="tmp.dir" /></not>
			</or>
		</condition>
		<fail if="removeConfigs.abort">removeConfigs is missing one or more required properties, and the build cannot continue.</fail>

		<echo message="Removing config files meant for the ${destroy.prefix} environment prefix" />
		<move todir="${tmp.dir}" overwrite="true" force="true">
			<fileset dir="${web.dir}" />
			<regexpmapper from="(.+)_${destroy.prefix}(\..+)?" to="_tmpenvconfig" />
		</move>
		<delete file="${tmp.dir}/_tmpenvconfig" quiet="yes" />
	</target>

	<target name="_deploy" description="Deploy new WAR to given environment">
		<condition property="deploy.abort">
			<or>
				<not><isset property="target.prefix" /></not>
				<not><isset property="war.context" /></not>
				<not><isset property="war.filename" /></not>
				<not><isset property="RELEASE" /></not>
				<not><isset property="web.dir" /></not>
				<not><isset property="webinf.dir" /></not>
				<not><isset property="classes.dir" /></not>
			</or>
		</condition>
		<fail if="deploy.abort">Deploy is missing one or more required properties, and the build cannot continue.</fail>

		<tstamp prefix="build-info">
			<format property="datestamp" pattern="yyyy-MM-dd_HH-mm-ss" locale="en"/>
		</tstamp>

		<echo message="Build of ${war.context} app to ${target.prefix} environment started ${build-info.datestamp}" />

		<property name="war.id" value="${war.context}_${RELEASE}_${target.prefix}_${build-info.datestamp}" />
		<echo message="Deploying release ${RELEASE} to target ${target.prefix} -- identifier ${war.id}" />

		<!-- Clean “app-logs-” prefixed directories (leaving “autobuild” files) -->
		<echo message="Cleaning “app-logs-” prefixed directories (leaving “autobuild” files)" />
		<delete>
			<fileset dir="${web.dir}">
				<include name="**/app-logs-*/*" />
				<exclude name="**/autobuild" />
			</fileset>
		</delete>

		<!-- Create the WAR file -->
		<echo message="Creating the ${war.filename} file and ${war.id}.war backup" />
		<war destfile="${war.filename}" webxml="${webinf.dir}/web.xml" filesetmanifest="merge" duplicate="preserve">
			<classes dir="${classes.dir}" />
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
				<include name="**/app-logs-*/autobuild" />
				<include name="WEB-INF/aggregator/certs/jssecacerts" />
				<exclude name="WEB-INF/web.xml" />
				<exclude name="WEB-INF/classes/**/*.class" />
			</fileset>
			<manifest>
				<section name="AIH-Build-${war.context}">
					<attribute name="Release" value="${RELEASE}" />
					<attribute name="Target" value="${target.prefix}" />
					<attribute name="Built-On" value="${build-info.datestamp}" />
					<attribute name="Identifier" value="${war.id}" />
				</section>
			</manifest>
		</war>

		<!-- Back up the new WAR file using the unique ID as its filename -->
		<!-- :TODO: Final Destination™ will probably be on the server-->
		<echo message="Backing up ${war.filename} as ${war.id}.war (:TODO: Final Destination™)" />
		<copy file="${war.filename}" tofile="${war.id}.war" />

		<echo message="WAR created successfully." />
	</target>

	<target name="_upload" description="Upload built WAR to the given environment">
		<condition property="upload.abort">
			<or>
				<not><isset property="target.prefix" /></not>
				<not><isset property="war.context" /></not>
				<not><isset property="war.filename" /></not>
				<not><isset property="scp.userid" /></not>
				<not><isset property="scp.host" /></not>
				<not><isset property="scp.deploydir" /></not>
				<not><isset property="scp.keyfile" /></not>
				<not><isset property="tomcat.manager.url" /></not>
				<not><isset property="tomcat.manager.username" /></not>
				<not><isset property="tomcat.manager.password" /></not>
			</or>
		</condition>
		<fail if="upload.abort">Upload is missing one or more required properties, and the build cannot continue.</fail>

		<!-- :TODO: check the keyfile exists -->

		<echo message="Uploading ${war.filename} to ${scp.host} using keyfile ${scp.keyfile}" />
		<scp
			file="${war.filename}"
			todir="${scp.userid}@${scp.host}:${scp.deploydir}"
			keyfile="${scp.keyfile}"
			sftp="yes"
			trust="true"
			verbose="true"
			failonerror="true"
		/>

<!--
		:TODO: if we get our server environments set up right, this is redundant
		<tomcat-deploy
			url="${tomcat.manager.url}"
			username="${tomcat.manager.username}"
			password="${tomcat.manager.password}"
			path="/${war.context}"
		/>
-->
	</target>


	<!-- :TODO: if we get our server environments set up right, EVERYTHING below is redundant -->

	<!-- ============================================================ -->
	<!-- Apache Tomcat Manager Tasks and Targets -->
	<!-- ============================================================ -->

<!--
	<taskdef name="start"    classname="org.apache.catalina.ant.StartTask"    />
	<taskdef name="stop"     classname="org.apache.catalina.ant.StopTask"     />
	<taskdef name="list"     classname="org.apache.catalina.ant.ListTask"     />
	<taskdef name="deploy"   classname="org.apache.catalina.ant.DeployTask"   />
	<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />
	<taskdef name="reload"   classname="org.apache.catalina.ant.ReloadTask"   />

	<target name="tomcat-start" description="Start application in Tomcat">
		<start
			url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
			path="/${war.context}"
		/>
	</target>

	<target name="tomcat-stop" description="Stop application in Tomcat">
		<stop
			url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
			path="/${war.context}"
		/>
	</target>

	<target name="tomcat-list" description="List applications in Tomcat">
		<list
			url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
		/>
	</target>

	<target name="tomcat-deploy" description="Deploy application in Tomcat">
		<deploy
			url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
			path="/${war.context}"
		/>
	</target>

	<target name="tomcat-undeploy" description="Undeploy application from Tomcat">
		<undeploy
			failonerror="no"
			url="${tomcat-manager-url}"
			username="${tomcat-manager-username}"
			password="${tomcat-manager-password}"
			path="/${war.context}"
		/>
	</target>

	<target name="tomcat-reload" description="Reload application in Tomcat">
		<reload
			url="${tomcat.manager.url}"
			username="${tomcat.manager.username}"
			password="${tomcat.manager.password}"
			path="/${war.context}"
		/>
	</target>
-->

</project>
