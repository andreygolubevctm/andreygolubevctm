/* VARIABLES */
// @xs-results-column-width: 265px;
// @sm-results-column-width: 165px;
// @md-results-column-width: 148px;
// @lg-results-column-width: 173px;

// @xs-results-column-number: 2;
// @sm-results-column-number: 3;
// @md-results-column-number: 5;
// @lg-results-column-number: 5;

// @xs-results-column-gutter-width: 10px;
// @sm-results-column-gutter-width: 10px;
// @md-results-column-gutter-width: 5px;
// @lg-results-column-gutter-width: 10px;

// @results-page-border-width: 2px;

// // rows colors
// @feature-color: #F7F7F7;
// @feature-odd-color: #F0F0F0;

// @category-color: darken(@feature-color, 20%);
// @category-odd-color: darken(@feature-odd-color, 25%);

// @section-color: transparent;
// @section-odd-color: transparent;

// @results-font-size: 12px;
// @results-line-height: 17px;

// // As of BS 3.1, this is just LEGACY MAGIC kept from 3.0.3 bootstrap variables for use in this file.
// @xs: ~'min-width: 0';
// @xs-only: ~'max-width: @{screen-sm-min}';
// @sm: ~'min-width: @{screen-sm-min}';
// @sm-only: ~'min-width: @{screen-sm-min} and max-width: @{screen-md-min}';
// @md: ~'min-width: @{screen-md-min}';
// @md-only: ~'min-width: @{screen-md-min} and max-width: @{screen-lg-min}';
// @lg: ~'min-width: @{screen-lg-min}';
// @lg-only: @lg;


// -----------------------------------
// FEATURES COMPARISON:
// LISTED RELATIVELY CLOSE TO DOM ORDER


// Variables
@results-headerbar-bg: #fff;
@results-headerbar-height: 172px;
@results-headerbar-border-bottom: 2px solid #CFD0C4;
@topDockedPageNav-height: @navbar-height;

@results-zindex-base:				0;
@results-zindex-resultsHeadersBg: 	(@results-zindex-base); //0
@results-zindex-resultItems:		(5 + @results-zindex-resultsHeadersBg); //3


// Convenience Mixins
.fakeBannerStyle() {
	height: @results-headerbar-height;
	background: @results-headerbar-bg;
	border-bottom: @results-headerbar-border-bottom;
}

#resultsPage.affix {
	position: inherit;
}

.featuresMode {

	//RESETS
	.panel {
		margin: 0;
		border: 0;
	}
	// Overflowing Div with contents.
	.resultsOverflow {
		//overflow-x: scroll;
		//-webkit-overflow-scrolling: touch;
		/* Putting the 3d trick here OR the overflow-scrolling sets stacking context so that the .result elements are on top of the .banner - meaning it works on desktop, ios7, Android 3.2 but NOT ios6*/
		/* http://benfrain.com/z-index-stacking-contexts-experimental-css-and-ios-safari/ */
		//-webkit-transform: translate3d(0, 0, 0);
		//transform: translate3d(0, 0, 0);
	}
	// Holds the columns in the overflowing div
	.results-table {
		//width: 970px;
		//overflow-y: hidden;
		//-webkit-overflow-scrolling: auto;
		/*Reset this so stacking contexts arent so upset.*/
		/* Putting the 3d trick here sets stacking context so that the .result elements are on top of the .banner - meaning it works on desktop and ios7 but NOT ios6 or android 3.2*/
		/*-webkit-transform: translate3d(0, 0, 0);
				transform: translate3d(0, 0, 0);*/
	}

	// ------------------------------------------------------------------------
	/* Column headers everywhere - absolute positioned */
	.result{
		z-index: @results-zindex-resultItems;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		.fakeBannerStyle();
		@media (@xs-only) {
			margin: 0 -@xs-results-column-gutter-width 0;
			padding: 0 @xs-results-column-gutter-width 0;
		}
		@media (@sm-only) {
			margin: 0 -@sm-results-column-gutter-width 0;
			padding: 0 @sm-results-column-gutter-width 0;
		}
		@media (@md-only) {
			margin: 0 -@md-results-column-gutter-width 0;
			padding: 0 @md-results-column-gutter-width 0;
		}
		@media (@lg-only) {
			margin: 0 -@lg-results-column-gutter-width 0;
			padding: 0 @lg-results-column-gutter-width 0;
		}
	}

	.resultInsert{
		height: @results-headerbar-height;
		padding: 0 10px;
	}

	// ------------------------------------------------------------------------
	// Column wrapper which holds the feature labels
	.featuresHeaders {
		.resultInsert{
			padding-right: 0;
		}
	}

	.featuresHeaders,
	.result-row {
		margin-top: 0;
		padding-top: @results-headerbar-height;
		position: relative;
	}

	.compared .resultInsert{
		background-color: @compare-color;
		border-bottom: 2px solid #ccc;
	}

	// ------------------------------------------------------------------------

	.resultsHeadersBg {
		.fakeBannerStyle();
		position: absolute;
		left: 0;
		right: 0;
		width: 100%;
		z-index: @results-zindex-resultsHeadersBg;

		// Hide the thing in Simples until it's ever fixed
		body.simples & {
			height: 0;
			border: none;
		}
	}
	.animateTop {
		-webkit-transition: top 500ms ease-in-out;
		transition: top 500ms ease-in-out;
	}
	.pushedTop {
		padding-top: @results-headerbar-height;
		.list-group {
			margin-top: 10px;
		}
	}
	.scrolling {

		-webkit-transition: top 60ms ease-in-out;
				transition: top 60ms ease-in-out;
		&.result {
			top: 0 !important;
		}
		&.resultsHeadersBg {
			top: 0 !important;
		}
		&.up { //on mobile breakpoints xs we don't want to see it while scrolling up, instantly make it transparent.
			@media (max-width: @screen-xs-max) {
				visibility: hidden;
			}
		}
	}



}

.touch .activeScroll {
	.opacity(0)
}