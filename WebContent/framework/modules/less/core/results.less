/* MIXINS */
.resultsOverflowWidth(@columnWidth, @columnsNumber, @columnGutterWidth, @containerBorderWidth){
	width: ( ( @columnWidth * @columnsNumber ) + ( (@columnGutterWidth * 2) * @columnsNumber ) - @columnGutterWidth - @containerBorderWidth);
}

.resultsSectionFakeRow(@columnWidth, @columnsNumber, @columnGutterWidth, @containerBorderWidth){
	width: ( ( @columnWidth * ( @columnsNumber + 1 ) ) + ( (@columnGutterWidth * 2) * @columnsNumber ) - @containerBorderWidth );
	padding-right: ( ( @columnWidth * @columnsNumber ) + ( (@columnGutterWidth * 2) * @columnsNumber ) - @containerBorderWidth );
}

.resultsSectionExtraTextLeftPos(@columnWidth, @columnGutterWidth){
	left: (@columnWidth + (@columnGutterWidth * 2) );
}

.compareBackgroundColor(){
	> .content{
		background-color: @compare-color ;
	}
	&:nth-child(odd) > .content{
		background-color: @compare-odd-color;
	}
}

// features rows
.resultsFeaturesSections(@bgColor, @bgColorOdd, @extraSpecificity: ~''){
	.featuresMode @{extraSpecificity}{
		.section{
			> .content {
				padding: 9px 5px;
				@media (@xs-only){
					display: none;
				}
			}

			&.labelInColumn > .content{
				padding: 10px;
			}

			&.collapsed {
				border-top:1px solid #fff;
				> .content {
					padding-top: 8px;
				}
			}

			&.expanding{
				> .children{
					background-color: @expanding-bg-color;
				}
			}
		}
		.featuresHeaders .section{

			> .content {

				background-color: @bgColor;

				.resultsSectionFakeRow(@xs-results-column-width, @xs-results-column-number, @xs-results-column-gutter-width, @results-page-border-width);
				@media (@sm) {
					.resultsSectionFakeRow(@sm-results-column-width, @sm-results-column-number, @sm-results-column-gutter-width, @results-page-border-width);
				}
				@media (@md) {
					.resultsSectionFakeRow(@md-results-column-width, @md-results-column-number, @md-results-column-gutter-width, @results-page-border-width);
				}
				@media (@lg) {
					.resultsSectionFakeRow(@lg-results-column-width, @lg-results-column-number, @lg-results-column-gutter-width, @results-page-border-width);
				}

				.extraText{
					position: absolute;
					top: 0;
					//Having the results texts higher in stack order here conflicts with the floating header :(
					//FIXME
					//TODO

					z-index: 1;

					.resultsSectionExtraTextLeftPos(@xs-results-column-width, @xs-results-column-gutter-width);
					@media (@sm) {
						.resultsSectionExtraTextLeftPos(@sm-results-column-width, @sm-results-column-gutter-width);
					}
					@media (@md) {
						.resultsSectionExtraTextLeftPos(@md-results-column-width, @md-results-column-gutter-width);
					}
					@media (@lg) {
						.resultsSectionExtraTextLeftPos(@lg-results-column-width, @lg-results-column-gutter-width);
					}
				}
			}

			/*
			@media (@sm){
				&:nth-child(odd) > .content{
					background-color: @bgColorOdd;
				}
			}
			*/
		}
		.result-row {
			.labelInColumn.section > .content{
				display: block;
				margin-left: 0;
				width: 100%;
			}
		}

		.compared  {
			.section {
				&.expanded > .content,
				&.expanding > .content{
					background-color: @compare-section-bg-color;
				}
			}
		}
	}
}
.resultsFeaturesCategories(@bgColor, @bgColorOdd, @childRowBgColor, @extraSpecificity: ~''){
	.featuresMode @{extraSpecificity}{
		.category{
			> .content{
				background-color: @bgColor;
			}

			&.expanding{
				>.children{
					background-color: @childRowBgColor;
				}
			}


			@media (@sm){
				&:nth-child(odd) > .content{
					background-color: @bgColorOdd;
				}
			}
		}
		.featuresHeaders .category > .content{
			padding: 6px 10px;
			padding-right: 20px;
		}

		.result-row .category > .content{
			font-family: @font-family-theme-bold;
			text-align: center;
			padding: 5px 10px;
		}
		.result-row .labelInColumn.category > .content{
			text-align: left;
			font-family: @font-family-theme-light;
			font-size: 16px;
		}

		.compared  {
			.category{
				.compareBackgroundColor;
			}
		}
	}
}
.resultsFeaturesRows(@bgColor, @bgColorOdd, @extraSpecificity: ~''){
	.featuresMode @{extraSpecificity}{
		.feature{
			> .content{
				background-color: @bgColor;
			}
			@media (@sm){
				&:nth-child(odd) > .content{
					background-color: @bgColorOdd;
				}
			}
		}
		.result-row .feature{
			> .content{
				text-align: center;
			}
			@media (@sm){
				> .content,
				&:nth-child(odd) > .content{
					text-align: left;
				}
			}
			.labelInColumn > .content{
				text-align: left;
			}
		}
		.result-row .section .feature{
			.labelInColumn > .content{
				font-weight: bold;
			}
		}
		.compared  {
			.category{
				.compareBackgroundColor;
			}
		}
	}
	// xs specific feature styling
	@media(@xs-only){
		.featuresMode{

			.feature .labelInColumn{
				> .content{
					border-top: 1px solid darken(@feature-color, 20%);
					border-bottom: 1px solid darken(@feature-color, 20%);

				}
			}
			.result-row{
				.feature >.content.c{
					background-color: #fff;


				}
				&:nth-child(odd){
					.content.c{
						border-right:2px solid darken(@feature-color, 20%) ;
					}
					.expanded > .content{
						border-right:2px solid lighten(@feature-color, 20%);
					}
				}
			}

		}

	}
}


.xsSection(@categoryTextColor, @categoryBgColor, @categoryExpandedTextColor, @categoryExpandedBgColor){

	> .labelInColumn{
		> .content{
			color: @categoryTextColor;
			border-top: 1px solid darken(@categoryBgColor, 10%);
			border-bottom: 1px solid darken(@categoryBgColor, 10%);
		}
	}
	> .content.c{
		background-color: @category-xs-color;
	}
	&.expanded,
	&.expanding{
		> .labelInColumn .content{
			background-color: lighten(@categoryExpandedBgColor, 10%);
			border-top: 1px solid darken(@categoryExpandedBgColor, 10%);
			border-bottom: 0px solid darken(@categoryExpandedBgColor, 10%);
			color: @categoryExpandedTextColor;
			.help-icon{
				color: @categoryExpandedTextColor;
			}
		}
		> .content{
			background-color: @categoryExpandedBgColor;
			border-color: darken(@categoryExpandedBgColor, 10%);
			color: @categoryExpandedTextColor;
			.icon-tick,
			.icon-cross{
				color: @categoryExpandedTextColor;
			}
		}
		> .children > :first-child .labelInColumn > .content{
			border-top: 1px solid darken(@categoryExpandedBgColor, 10%);
		}
	}

}

/*
Does not work currently work as LESS does not support generating properties dynamically :-/ Sass does
Keeping it here anyway as they seem to be working on it, so wait and see if that can be useful
*/
.media-variants(@property, @xs-value, @sm-value, @md-value, @lg-value){
	@property: @xs-value;
	@media (@sm) {
		@property: @sm-value;
	}
	@media (@md) {
		@property: @md-value;
	}
	@media (@lg) {
		@property: @lg-value;
	}
}

/* LESS */
#resultsPage {
	position: relative;
	//Relative mucks up the banner breaking out of the parent.
	.clearfix();

	// Hide results initially so we don't see the scaffolding after #benefits
	// We show again in healthResults.onResultsFetchFinish
	display: none;
}

.resultsContainer{
	padding:0;
	position: relative;
	//Relative mucks up the banner breaking out of the parent.

	//margin: 0 (0px - @xs-results-column-gutter-width);
	margin:0;

	@media (@xs-only) {
		.resultsOverflow{
			margin:0 0px;
		}
	}
	@media (@sm) {
		padding: 0 10px;
		margin: 0 (-10px - @sm-results-column-gutter-width);
	}
	@media (@md) {
		padding: 0 10px;
		margin: 0 (-10px - @md-results-column-gutter-width);
	}
	@media (@lg) {
		padding: 0 10px;
		margin: 0 (-10px - @lg-results-column-gutter-width);
	}
}
.noResults{
	margin-top: 60px;
	width: 100%;

	height:500px;
	position: relative;
	text-align: center;

	@media (@sm) {
		width: @container-sm;
	}
	@media (@md) {
		width: @container-md;
	}
	@media (@lg) {
		width: @container-lg;
	}

	.alert{
		margin: 0 80px;
	}

}
.result-row {
	opacity: 1;
	&.filtered {
		opacity: 0;
	}
	&.compared {
		background-color: @compare-color;
	}
	//.frequency {
	//	display: none;
	//}
	.result{
		position: relative;
	}
	.compareCheckbox{
		position: absolute;
		right:(@results-column-side-padding-width+5);
		top:10px;
	}

}
.featuresElements{
	display: none;
}

/* FEATURES COMPARISON */
.featuresMode{

	&.resultsContainer,
	.results-table{
		float: left;
		@media(@xs-only){
			background-color: #ddd;
		}

//--------------------------------------------------------------------------------------------------------------------
		
//--------------------------------------------------------------------------------------------------------------------
	}



	.resultsOverflow{
		overflow: hidden;
		float: left;
		width: 100%;
		.touch & {
			//overflow-x: scroll;
			-webkit-overflow-scrolling: touch; //elastic scroll on.
		}
		@media (@sm) {
			.resultsOverflowWidth(@sm-results-column-width, @sm-results-column-number, @sm-results-column-gutter-width, @results-page-border-width);
		}
		@media (@md) {
			.resultsOverflowWidth(@md-results-column-width, @md-results-column-number, @md-results-column-gutter-width, @results-page-border-width);
		}
		@media (@lg) {
			.resultsOverflowWidth(@lg-results-column-width, @lg-results-column-number, @lg-results-column-gutter-width, @results-page-border-width);
		}


	}

	/* Columns properties */
	.featuresHeaders{
		@media (@xs-only) {
		    display: none !important;
		}
		
	}

	/* xs feature labels */
	.labelInColumn{

		display:none;
		width: 200%;

		@media (@xs-only){
			display: block;
		}

		.content{
			height: auto !important;
		}
	}

	.expandable > .content{
		cursor: pointer;
	}
	.expander{
		.icon-arrow-right;
		right: 5px;
		top: 50%;
		margin-top: -7px;
		position: absolute;
		font-size: 12px;
	}
	.expanded .labelInColumn > .content .expander,
	.expanding .labelInColumn > .content .expander,
	.expanded > .content .expander,
	.expanding > .content .expander{
		.icon-arrow-down;
	}

	.featuresHeaders,
	.result-row {
		float: left;

		margin: 0 @xs-results-column-gutter-width;
		width: @xs-results-column-width;

		@media (@sm) {
			margin: 0 @sm-results-column-gutter-width;
			width: @sm-results-column-width;
		}
		@media (@md) {
			margin: 0 @md-results-column-gutter-width;
			width: @md-results-column-width;
		}
		@media (@lg) {
			margin: 0 @lg-results-column-gutter-width;
			width: @lg-results-column-width;
		}

	}

	/* column content container */
	.featuresList{
		font-size: @results-font-size;
		vertical-align: middle;
	}
	.content{
		padding: 8px @results-column-side-padding-width;
		position: relative;
	}
	.extraText{
		display: block;
	}
	.collapsed > .children{
		display: none;
	}

	.expanding > .children{
		display: block;
		& > .cell{
			visibility: hidden;
			height:30px;
			overflow: hidden;
		}
	}

	.expanded > .children{
		display: block;
	}

}


/** This is the min height */
/*
.height30 {
	height: 30px;
}
*/
.generate-result-cell-heights();

.generate-result-cell-heights(@i: 20) when (@i =< 270) {

	.height@{i} {
		height: (1px*@i);
	}

	.generate-result-cell-heights((@i + 10));

}

//
//.resultsFeaturesSections(@section-color, @section-odd-color);
//.resultsFeaturesCategories(@category-color, @category-odd-color);
//.resultsFeaturesRows(@feature-color, @feature-odd-color);
//



.result {

	.productSummary,
	.comparisonSummary{
		padding-top: 10px;
		margin-bottom: 5px;
		}
	.companyLogo{
		height: 60px;

		}
	.companyLogo img{
		margin-top: 10px;
					}
	.restrictedFund{
		text-transform: uppercase;
		text-align: center;
		font-size: 10px;
		background-color: #FFEFEF;
		color: #FF5F5F;
		padding: 8px 0 1px 0;
		margin-top: -4px;
		&:hover{
			background-color: #FF5F5F;
			color: white;
				}
			}
	&.faded {
		.opacity(0.2);
		// see hover state below.
		}
		}

.no-touch{
	.result.faded {
		// sorry people with touch and mouse.
		&:hover{
			opacity: 1;
			//Strangely, redefining the hover here was stuffing up white label.
		}
	}
}