;(function($, undefined){

	/**
	 * emailLoadQuote triggers an event once if the quote is loaded with the action 'expired' or 'promotion'.
	 * The action is generated by load quote urls in emails sent to customers. This class simply triggers the
	 * event and it is up to individual verticals to listen for and action the event.
	 *
	 * The event is primarily triggered when results are loaded however a second listener is on validation
	 * failure just in case the form has changed since the email was sent - we want to ensure it is rendered.
	 **/

	var meerkat = window.meerkat,
		meerkatEvents = meerkat.modules.events,
		log = meerkat.logging.info,
		msg = meerkat.messaging,
		handlers = {
			data_ready : false,
			validation_error : false
	};

	var events = {
			emailLoadQuote : {
				TRIGGERS_MODAL : 'TRIGGERS_MODAL'
			}
	},
	moduleEvents = events;

	var emailTypes = ["expired","promotion"];

	function init(){
		if(isApplicable()) {
			handlers.step_init = meerkat.messaging.subscribe(meerkat.modules.events.journeyEngine.STEP_INIT, _.bind(action, this, true));
			/* This is trigger is in place to ensure the modal is shown even if the journey
				is stopped before it reaches the results page */
			handlers.validation_error = meerkat.messaging.subscribe(meerkat.modules.events.journeyEngine.STEP_VALIDATION_ERROR, _.bind(action, this, false));
		}
	}

	function action(valid) {

		meerkat.messaging.unsubscribe(meerkat.modules.events.journeyEngine.STEP_INIT, handlers.step_init);
		meerkat.messaging.unsubscribe(meerkat.modules.events.journeyEngine.STEP_VALIDATION_ERROR, handlers.validation_error);

		var publish = function() {
			meerkat.messaging.publish(events.emailLoadQuote.TRIGGERS_MODAL, {
				action : meerkat.site.pageAction,
				valid : valid
			});
		};

		if(valid && meerkat.modules.performanceProfiling.isIE8()) {
			_.defer(publish);
		} else {
			publish();

		}
	}

	function isApplicable() {
		return !meerkat.site.isNewQuote && _.indexOf(emailTypes, meerkat.site.pageAction) > -1;
	}

	function getStartStepOverride(startStep) {

		if(isApplicable()) {
			return "results";
		}

		return startStep;
	}

	meerkat.modules.register("emailLoadQuote", {
		init: init,
		events: events,
		getStartStepOverride: getStartStepOverride
	});

})(jQuery);