/**********************************************
	LESS PORTED FROM core/resultsHeaderBar.less
**********************************************/

.resultsContainer {
  position: relative;
  z-index: @results-zindex-resultItems;

  // always in effect
  &.affixed-settings {

    .result-row {
      border: 0;
      // To make up for the space no longer consumed by the .result element.
      padding-top: 360px;
      @media (@sm) {
        padding-top: 400px;
      }
      @media (@lg) {
        padding-top: 430px;
      }

      .featuresList {
        border: 1px solid @results-border-color;
        margin: 0;
        padding: 0 15px;
      }
    }

    .result {
      top: 45px;
      width: inherit;
      border: 1px solid @results-border-color;
      border-bottom: 1px solid @gray-dark;
    }

    .hide-on-affix {
      display: none;
    }
  }

  // .affixed is not in effect while going between pages.
  &.affixed {
    /*    @media (@xs-only) {
          .result {
            top: 80px; // to make up for pagination and header bar.
          }

          .lhcText {
            display: none;
          }

          .productSummary {
            height: 100px;
          }

          .btn-more-info {
            .btn-sm;
          }
        }*/

    .result {
      display: none; // when in fixed mode, only display the items on the 'current page' - thanks to the pagination component for settings this.
      position: fixed;
    }

    .currentPage {
      .result {
        display: block;
      }
    }

  }

  &.affixed-compact {
    h3 {
      display: block; // for some reason it's hidden in the core.
    }
    @media (@xs-only) {
      .result {
        .opacity(0);
      }

      .isScrolling .result {
        .opacity(0);
      }

      .currentPage {
        .result {
          .opacity(1);
        }
      }

    }
  }

  // only in effect during the pagination animation
  &.affixed-absoluted {
    .result {
      position: absolute;
    }
  }
}