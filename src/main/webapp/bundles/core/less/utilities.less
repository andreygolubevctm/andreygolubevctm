.hardwareAcceleration{
	.translate3d(0, 0, 0);
}
.opacity1{
	.opacity(1);
}
.displayNone {
  display: none !important;
}
.displayBlock {
  display: block !important;
}

/* TRANSITIONS */


@media(@xs-only){
	.resultsTransformTransition,
	.transformTransition{
		.transition-transform(~"500ms ease-in-out");
	}

	.resultsTableLeftMarginTransition{
		.transition(~"margin-left 500ms ease-in-out");
	}
}

@media(@sm){
	.resultsTransformTransition,
	.transformTransition{
		.transition-transform(~"1000ms ease-in-out");
	}

	.resultsTableLeftMarginTransition{
		.transition(~"margin-left 1000ms ease-in-out");
	}
}

.leftTransition{
	.transition(~"left 1000ms ease-in-out");
}
.topTransition{
	.transition(~"top 1000ms ease-in-out");
}
.noTransformTransition{
	.transition-transform(~"0ms ease-in-out");
}
.opacityTransition{
	.transition(~"opacity 1000ms ease-in-out");
}
.opacityTransitionQuick{
	.transition(~"opacity 500ms ease-in-out");
}

.providersLogoImagesVerticallyCentered(@providers, @index: 1) when (isstring(extract(@providers, @index))) {
	@currentMember: extract(@providers, @index);

	@temp-width : ~"@{vertical}-logo-@{currentMember}-width";
	@temp-height : ~"@{vertical}-logo-@{currentMember}-height";
	@temp-offset-x : ~"@{vertical}-logo-@{currentMember}-offset-x";
	@temp-offset-y : ~"@{vertical}-logo-@{currentMember}-offset-y";

	& when (@index = 1) {
		@temp-image : ~"@{vertical}-logo-@{currentMember}-image";
		@temp-total-width : ~"@{vertical}-logo-@{currentMember}-total-width";
		@temp-total-height : ~"@{vertical}-logo-@{currentMember}-total-height";
		background-image: url(@@temp-image);
		background-size: (@@temp-total-width * @prop-scale) (@@temp-total-height * @prop-scale);
	}

	&.@{class-prefix}@{currentMember} {
		width:ceil(@@temp-width * @prop-scale);
		height:ceil(@@temp-height * @prop-scale);
		background-position: (@@temp-offset-x * @prop-scale) (@@temp-offset-y * @prop-scale);
		margin: ceil((@standard-height - @@temp-height)/2) auto (floor((@standard-height - @@temp-height)/2) + @bottom-margin) auto;
	}

	.providersLogoImagesVerticallyCentered(@providers, (@index + 1));
}

.providersLogoImages(@providers, @index: 1) when (isstring(extract(@providers, @index))) {
	@currentMember: extract(@providers, @index);

	@temp-width : ~"@{vertical}-logo-@{currentMember}-width";
	@temp-height : ~"@{vertical}-logo-@{currentMember}-height";
	@temp-offset-x : ~"@{vertical}-logo-@{currentMember}-offset-x";
	@temp-offset-y : ~"@{vertical}-logo-@{currentMember}-offset-y";

	& when (@index = 1) {
		@temp-image : ~"@{vertical}-logo-@{currentMember}-image";
		@temp-total-width : ~"@{vertical}-logo-@{currentMember}-total-width";
		@temp-total-height : ~"@{vertical}-logo-@{currentMember}-total-height";
		background-image: url(@@temp-image);
		background-size: (@@temp-total-width * @prop-scale) (@@temp-total-height * @prop-scale);
	}

	&.@{class-prefix}@{currentMember} {
		width:ceil(@@temp-width * @prop-scale);
		height:ceil(@@temp-height * @prop-scale);
		background-position: (@@temp-offset-x * @prop-scale) (@@temp-offset-y * @prop-scale);
	}

	.providersLogoImages(@providers, (@index + 1));
}

.providersRetinaLogoImages(@providers, @index: 1) when (isstring(extract(@providers, @index))) {
	@currentMember: extract(@providers, @index);

	@temp-2x-offset-x : ~"@{vertical}-logo-@{currentMember}-2x-offset-x";
	@temp-2x-offset-y : ~"@{vertical}-logo-@{currentMember}-2x-offset-y";

	& when(@index = 1) {
		@temp-2x-image : ~"@{vertical}-logo-@{currentMember}-2x-image";
		@temp-2x-total-width : ~"@{vertical}-logo-@{currentMember}-2x-total-width";
		@temp-2x-total-height : ~"@{vertical}-logo-@{currentMember}-2x-total-height";
		background-image: url(@@temp-2x-image) !important;
	}

	.providersRetinaLogoImages(@providers, (@index + 1));
}

.providersHighResSpriteImages(@vertical; @class-prefix; @providers; @prop-scale:1; @only-screen:~"only screen and") {
	.providersLogoImages(@providers);

	@media
		@only-screen (-webkit-min-device-pixel-ratio: 1.5),
		@only-screen (min--moz-device-pixel-ratio: 1.5),
		@only-screen (-o-min-device-pixel-ratio: 3/2),
		@only-screen (min-device-pixel-ratio: 1.5),
		@only-screen (min-resolution: 1.5dppx),
		@only-screen (min-resolution: 144dpi) {
			.providersRetinaLogoImages(@providers);
		}

	& when not (@prop-scale = 1) {
		image-rendering: optimizeSpeed;
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: -webkit-optimize-contrast;
		image-rendering: optimize-contrast;
		-ms-interpolation-mode: nearest-neighbor;
	}
}

.providersNormalSpriteImages(@vertical; @class-prefix; @providers; @prop-scale:1; @only-screen:~"only screen and") {
	.providersLogoImages(@providers);

	& when not (@prop-scale = 1) {
		image-rendering: optimizeSpeed;
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: -webkit-optimize-contrast;
		image-rendering: optimize-contrast;
		-ms-interpolation-mode: nearest-neighbor;
	}
}

.providersNormalSpriteImagesVerticallyCentered(@vertical; @class-prefix; @providers; @standard-height; @bottom-margin; @prop-scale:1; @only-screen:~"only screen and") {
	.providersLogoImagesVerticallyCentered(@providers);

	& when not (@prop-scale = 1) {
		image-rendering: optimizeSpeed;
		image-rendering: -moz-crisp-edges;
		image-rendering: -o-crisp-edges;
		image-rendering: -webkit-optimize-contrast;
		image-rendering: optimize-contrast;
		-ms-interpolation-mode: nearest-neighbor;
	}
}

.highResSpriteImg(@width-1x; @height-1x; @file-1x; @posx-1x; @posy-1x; @bkg-width-1x; @bkg-height-1x; @file-2x; @posx-2x; @posy-2x; @bkg-width-2x; @bkg-height-2x; @prop-scale:1; @only-screen:~"only screen and") {
	width:(@width-1x * @prop-scale);
	height:(@height-1x * @prop-scale);
	background-image: url("@{file-1x}");
	background-size: (@bkg-width-1x * @prop-scale) (@bkg-height-1x * @prop-scale);
	background-position: (@posx-1x * @prop-scale) (@posy-1x * @prop-scale);
	@media
	@only-screen (-webkit-min-device-pixel-ratio: 1.5),
	@only-screen (min--moz-device-pixel-ratio: 1.5),
	@only-screen (-o-min-device-pixel-ratio: 3/2),
	@only-screen (min-device-pixel-ratio: 1.5),
	@only-screen (min-resolution: 1.5dppx),
	@only-screen (min-resolution: 144dpi) {
		background-image: url("@{file-2x}");
		background-size: (@bkg-width-2x * @prop-scale) (@bkg-height-2x * @prop-scale);
		background-position: (@posx-2x * @prop-scale) (@posy-2x * @prop-scale);
	}

	& when not (@prop-scale = 1) {
		image-rendering: optimizeSpeed;             /* STOP SMOOTHING, GIVE ME SPEED  */
		image-rendering: -moz-crisp-edges;          /* Firefox                        */
		image-rendering: -o-crisp-edges;            /* Opera                          */
		image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
		image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
		-ms-interpolation-mode: nearest-neighbor;   /* IE8+                           */
	}
}

.normalSpriteImg(@width; @height; @file; @posx; @posy; @bkg-width; @bkg-height; @prop-scale:1; @only-screen:~"only screen and") {
	width:@width * @prop-scale;
	height:@height * @prop-scale;
	background-image: url("@{file}");
	background-size: (@bkg-width * @prop-scale) (@bkg-height * @prop-scale);
	background-position: (@posx * @prop-scale) (@posy * @prop-scale);

	& when not (@prop-scale = 1) {
		image-rendering: optimizeSpeed;             /* STOP SMOOTHING, GIVE ME SPEED  */
		image-rendering: -moz-crisp-edges;          /* Firefox                        */
		image-rendering: -o-crisp-edges;            /* Opera                          */
		image-rendering: -webkit-optimize-contrast; /* Chrome (and eventually Safari) */
		image-rendering: optimize-contrast;         /* CSS3 Proposed                  */
		-ms-interpolation-mode: nearest-neighbor;   /* IE8+                           */
	}
}

.highResImg(@file-1x; @file-2x; @width-1x; @height-1x; @only-screen:~"only screen and") {
	background-image: url("@{file-1x}");
	@media
	@only-screen (-webkit-min-device-pixel-ratio: 1.5),
	@only-screen (min--moz-device-pixel-ratio: 1.5),
	@only-screen (-o-min-device-pixel-ratio: 3/2),
	@only-screen (min-device-pixel-ratio: 1.5),
	@only-screen (min-resolution: 1.5dppx),
	@only-screen (min-resolution: 144dpi) {
		background-image: url("@{file-2x}");
		background-size: @width-1x @height-1x;
	}
}

.highResImg(@file-1x; @file-2x; @only-screen:~"only screen and") {
	background-image: url("@{file-1x}");
	@media
	@only-screen (-webkit-min-device-pixel-ratio: 1.5),
	@only-screen (min--moz-device-pixel-ratio: 1.5),
	@only-screen (-o-min-device-pixel-ratio: 3/2),
	@only-screen (min-device-pixel-ratio: 1.5),
	@only-screen (min-resolution: 1.5dppx),
	@only-screen (min-resolution: 144dpi) {
		background-image: url("@{file-2x}");		
	}
}

.highResBgSize(@OnexWidth; @OnexHeight) {
	background-size: @OnexWidth @OnexHeight;
	@media (-webkit-min-device-pixel-ratio: 1.5),
		(min--moz-device-pixel-ratio: 1.5),
		(-o-min-device-pixel-ratio: 3/2),
		(min-device-pixel-ratio: 1.5),
		(min-resolution: 1.5dppx),
		(min-resolution: 144dpi) {
		background-size: (@OnexWidth/2) (@OnexHeight/2);
	}
}

.highResBgPosition(@OnexLeft, @OnexTop,@TwoxLeft, @TwoxTop) {
	background-position: @OnexLeft @OnexTop;
	@media (-webkit-min-device-pixel-ratio: 1.5),
		(min--moz-device-pixel-ratio: 1.5),
		(-o-min-device-pixel-ratio: 3/2),
		(min-device-pixel-ratio: 1.5),
		(min-resolution: 1.5dppx),
		(min-resolution: 144dpi) {
		background-position: @TwoxLeft @TwoxTop;
	}
}

.noWrap{
	white-space: nowrap;
}