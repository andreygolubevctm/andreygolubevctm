
// Loaded before framework core and theme.
// See: framework.build.ctm.less

//
// Mixins Specific to CTM Brand
// --------------------------------------------------

// This is magical vertical align. It essentially makes anything vertical aligned in anything else. Works all the way down to IE9. Try it on a p tag in a div by going div p { .vertical-align(); }; (yes that's used as mixin include).
// http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
.vertical-align(@percent: 50%) {
  position: relative;
  top: @percent;
  -webkit-transform: translateY(-@percent);
      -ms-transform: translateY(-@percent);
          transform: translateY(-@percent);
  //.translate(@x; @y) mixin isn't used here as i just need the Y for readability.
}

//Usually used in mobile - this sets an element to be fixed and full screen width.
.fixedInPlace(){
	position: fixed;
	right:0;
	left:0;
}

// Drop shadows
.box-shadow(@shadow) {
	//-webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
	//        box-shadow: @shadow;
	box-shadow: none;
}

// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

.form-control-validation(@text-color: @input-color; @border-color: @input-border; @background-color: @input-bg;
	@addon-color:@input-group-addon-color; @addon-border:@input-group-addon-border-color; @addon-bg:@input-group-addon-bg;) {
	// Color the label and help text
	.help-block,
	.control-label,
	.radio,
	.checkbox,
	.radio-inline,
	.checkbox-inline  {
		color: @text-color;
	}
	// Set the border and box shadow on specific inputs to match
	.form-control, .select { //caters for the custom selects
		color: @text-color;
		border-color: @border-color;
		background-color: @background-color;
		&:focus {
			border-color: darken(@border-color, 10%);
		}
	}
	// Set validation states also for addons
	.input-group-addon {
		color: @addon-color;
		border-color: @addon-border;
		background-color: @addon-bg;
	}

	.datepicker-inline {
		border-color: @border-color;
		.dow {
			color: @text-color;
		}
	}
}

.form-control-button-group-validation(@text-color: @input-color; @border-color: @input-border; @background-color: @input-bg) {
	.btn-group > .btn { //should this be .btn or .btn-default
		background-color: @background-color;
		border-color: @border-color;
		color: @text-color;
		&.active {
			background-color: @border-color;
			color: @background-color;
		}
	}
}


// Wells
// -------------------------
.well-variant(@bg-color, @text-color: @text-color, @heading-text-color: @text-color) {
	background-color: @bg-color;
	color: @text-color;
	position: relative;

	h4{
		color: @heading-text-color;
	}

	&:after {
		border-color: @bg-color transparent;
		border-style: solid;
		border-width: 20px 0 0 30px;
		bottom: -19px;
		content: "";
		display: block;
		right: 30px;
		position: absolute;
		width: 0;
	}
}

// qTip tooltips / popovers
// -------------------------
.qtip-variant(@border, @border-radius, @title-bg-color, @content-bg-color, @padding-title, @padding-content, @title-text-color, @content-text-color){
	&.qtip{
		border: @border;
		border-radius: @border-radius;
		background-color: @content-bg-color;

		.qtip-titlebar{
			padding: @padding-title;
			background-color: @title-bg-color;
			color: @title-text-color;
		}
		.qtip-content{
			padding: @padding-content;
			color: @content-text-color;
		}
	}
}

// Mixin for generating new button styles
.btn-styles(
		@btn-bg,
		@btn-color: @btn-bg,
		@btn-active-bg: darken(@btn-bg, 12%),
		@btn-active-color: contrast(@btn-active-bg),
		@btn-interact-bg: darken(@btn-bg, 12%),
		@btn-interact-color: contrast(@btn-interact-bg),
		@btn-border: @btn-bg,
		@btn-active-border: @btn-active-bg,
		@btn-interact-border: @btn-interact-bg,
		@use-border-boolean: false
	){
	background-color: @btn-bg;
	color: @btn-color;
	& when (@use-border-boolean = true) {
		border-color: @btn-border;
		border-width: @btn-border-width;
		border-style: @btn-border-style;
		//padding: @btn-padding-bordered;
	}
	&:hover,
	&:focus,
	&.focus {
		background-color: @btn-interact-bg;
		color: @btn-interact-color;
		outline: 0;
		& when (@use-border-boolean = true) {
			border-color: @btn-interact-border;
		}
	}
	&:active,
	&.active {
		background-color: @btn-active-bg;
		color: @btn-active-color;
		& when (@use-border-boolean = true) {
			border-color: @btn-active-border;
		}
	}
}

.btn-pill-styles(
	@btn-bg,
    @btn-color: @btn-bg,
    @btn-active-bg: darken(@btn-bg, 12%),
    @btn-active-color: contrast(@btn-active-bg),
    @btn-interact-bg: darken(@btn-bg, 12%),
    @btn-interact-color: contrast(@btn-interact-bg),
    @btn-border: @btn-bg,
    @btn-active-border: @btn-active-bg,
    @btn-interact-border: @btn-interact-bg,
    @use-border-boolean: false,
	@border-corner-radius: @pill-border-cnr-radius,
	@pill-padding-top: @pill-btn-pad-top,
	@pill-padding-bottom: @pill-btn-pad-bottom,
	@pill-padding-left: @pill-btn-pad-left
){
	background-color: @btn-bg;
	color: @btn-color;
	padding-top: @pill-btn-pad-top;
	padding-bottom: @pill-btn-pad-bottom;
	padding-left: @pill-btn-pad-left;

	& when (@use-border-boolean = true) {
		border-color: @btn-border;
		border-width: @btn-border-width;
		border-style: @btn-border-style;
		//padding: @btn-padding-bordered;
		border-bottom-right-radius: @pill-border-cnr-radius !important;
		border-top-right-radius: @pill-border-cnr-radius !important;
		border-bottom-left-radius: @pill-border-cnr-radius !important;
		border-top-left-radius: @pill-border-cnr-radius !important;
	}
	&:hover,
	&:focus,
	&.focus {
		background-color: @btn-interact-bg;
		color: @btn-interact-color;
		outline: 0;
		& when (@use-border-boolean = true) {
			border-color: @btn-interact-border;
		}
	}
	&::before {
		content: "\e931";
		user-select: none;
		font-family: 'framework_font';
		font-size: 16px;
		float: left;
		margin-left: -6px;
		margin-right: 0px;
		margin-top: -2px;

		padding: 0.22em;
		line-height: 1;
		visibility: hidden;
	}

	&:active,
	&.active {
		background-color: @btn-active-bg;
		color: @btn-active-color;
		& when (@use-border-boolean = true) {
			border-color: @btn-active-border;
			border-bottom-right-radius: @pill-border-cnr-radius !important;
			border-top-right-radius: @pill-border-cnr-radius !important;
			border-bottom-left-radius: @pill-border-cnr-radius !important;
			border-top-left-radius: @pill-border-cnr-radius !important;

			&:hover,
			&:focus,
			&.focus {
				border-color: @btn-active-border;
				outline: none !important;
			}
		}
	}
	&:active::before,
	&.active::before {
		visibility: visible;
	}
	&:last-child:active,
	&:last-child.active{
		background-color: @btn-active-bg;
		color: @btn-active-color;
		outline: 0;
		padding-left: (@pill-btn-pad-left - 1) !important;
	}

}