<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<include resource="org/springframework/boot/logging/logback/defaults.xml" />

	<conversionRule conversionWord="logcxt" converterClass="com.ctm.commonlogging.context.LoggingContextConverter" />
	<conversionRule conversionWord="servletctx" converterClass="com.ctm.commonlogging.context.ContextPathConverter" />
	<property name="LOG_CTX_PATTERN" value="[%logcxt{t}:%logcxt{b}:${VERTICAL_TYPE:-%logcxt{v}}:%logcxt{c}]"/>

	<springProperty scope="context" name="LOG_JSON" source="ctm.logging.format.json" defaultValue="false"/>

	<springProperty scope="context" name="LOG_JSON_FILE" source="ctm.logging.format.jsonfile" defaultValue="false"/>

	<springProperty scope="context" name="ctmLoggingPath" source="logging.path"
					defaultValue="localhost"/>

	<springProperty scope="context" name="jsonFileLoggingPath" source="ctm.logging.json.file.path"
					defaultValue="/usr/tomcat/current/logs/"/>

	<springProperty scope="context" name="maxFileSize" source="ctm.logging.json.file.maxsize"
					defaultValue="5MB"/>

	<springProperty scope="context" name="maxHistory" source="ctm.logging.json.file.maxhistory"
					defaultValue="30"/>



	<property name="APPNAME" value="webctm"/>
	<property name="ENV" value="${spring.profiles.active:-LOCALHOST}"/>
	<property name="CONSOLE_LOG_PATTERN" value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} ${LOG_CTX_PATTERN} %clr(:){faint} %m%n%wex"/>
	<property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} ${LOG_CTX_PATTERN} : %m%n%wex"/>

	<include resource="org/springframework/boot/logging/logback/console-appender.xml" />
	<include resource="org/springframework/boot/logging/logback/file-appender.xml" />

	<appender name="SIFT" class="ch.qos.logback.classic.sift.SiftingAppender">
		<!-- in the absence of the class attribute, it is assumed that the
				desired discriminator type is
				ch.qos.logback.classic.sift.MDCBasedDiscriminator -->
		<discriminator>
			<key>loggerName</key>
			<defaultValue>default_xml</defaultValue>
		</discriminator>
		<sift>
			<appender name="FILE-${loggerName}" class="ch.qos.logback.core.FileAppender">
				<prudent>false</prudent>
				<!-- ${logLocation} comes from environmentConfigLocation properties file -->
				<file>${ctmLoggingPath}/${loggerName}.log</file>
				<encoder>
					<pattern>%d{yyyy-MM-dd HH:mm:ss} - %msg%n</pattern>
				</encoder>
			</appender>
		</sift>
	</appender>

	<appender name="JSON_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="com.ctm.commonlogging.logback.ExtLayoutWrappingEncoder">
			<layout class="net.logstash.logback.layout.LogstashLayout">
				<jsonFactoryDecorator class="com.ctm.commonlogging.common.LogstashFactoryDecorator"/>
				<fieldNames class="net.logstash.logback.fieldnames.ShortenedFieldNames"/>
				<includeContext>false</includeContext>
				<provider class="net.logstash.logback.composite.loggingevent.LoggingEventPatternJsonProvider">
					<pattern>{
						"accountId":"%logcxt{a}",
						"hostname":"${HOSTNAME}",
						"appname":"${APPNAME}",
						"env":"${ENV}",
						"context":"%servletctx",
						"transactionId":"%logcxt{t}",
						"brandCode":"%logcxt{b}",
						"verticalType":"${VERTICAL_TYPE:-%logcxt{v}}",
						"correlationId":"%logcxt{c}"}
					</pattern>
				</provider>
				<provider class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider"/>
			</layout>
		</encoder>
	</appender>

	<appender name="JSON_FILE" class="ch.qos.logback.core.FileAppender">
		<prudent>true</prudent>
		<!-- ${logLocation} comes from environmentConfigLocation properties file -->
		<file>${jsonFileLoggingPath}/ctmJson.log</file>
		<encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
			<jsonFactoryDecorator class="com.ctm.commonlogging.common.LogstashFactoryDecorator"/>
			<providers>
				<logstashMarkers/>
				<pattern>
					<pattern>
						{"@timestamp":"%d{yyyy-MM-dd'T'HH:mm:ss.SSSZZ}",
						"logger": "%logger",
						"level": "%level",
						"thread": "%thread",
						"caller": "%caller",
						"class": "%class",
						"line_number":"#asLong{%line}",
						"method": "%method",
						"message": "%message",
						"accountId":"%logcxt{a}",
						"hostname":"${HOSTNAME}",
						"appname":"${APPNAME}",
						"env":"${ENV}",
						"context":"%servletctx",
						"transactionId":"%logcxt{t}",
						"brandCode":"%logcxt{b}",
						"verticalType":"${VERTICAL_TYPE:-%logcxt{v}}",
						"correlationId":"%logcxt{c}"}
					</pattern>
				</pattern>
				<arguments>
				    <includeNonStructuredArguments>false</includeNonStructuredArguments>
				</arguments>
			</providers>
		</encoder>
	</appender>

	<appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<queueSize>500</queueSize>
		<appender-ref ref="SIFT" />
	</appender>

	<logger name="com.ctm.web.core.logging.XMLOutputWriter" additivity="false">
		<appender-ref ref="ASYNC" />
	</logger>

	<!-- 3rd Party Loggers -->
	<logger name="org.springframework.web" level="INFO" />
	<!--<logger name="org.springframework.boot" level="INFO" />-->
	<logger name="org.springframework.jdbc.core.JdbcTemplate" level="INFO" />
	<logger name="net.sf.ehcache" level="WARN"/>
	<logger name="org.hibernate" level="INFO" />
	<logger name="org.quartz" level="INFO" />
	<!-- Change this to DEBUG if you need the request and response from the backend services -->
	<logger name="com.ctm.web.email" level="INFO"/>
	<logger name="com.ctm.web.core.services.CommonRequestService" level="INFO"/>
	<logger name="com.ctm.web.core.intercepter.SpringFormParamMapInInterceptor" level="INFO"/>

	<root level="INFO">
		<if condition='p("LOG_JSON_FILE").equals("true")'>
		<then>
			<appender-ref ref="JSON_FILE" />
		</then>
		</if>
		<if condition='p("LOG_JSON").equals("true")'>
			<then>
				<appender-ref ref="JSON_CONSOLE" />
			</then>
			<else>
				<appender-ref ref="CONSOLE" />
				<appender-ref ref="FILE" />
			</else>
		</if>
	</root>
</configuration>
